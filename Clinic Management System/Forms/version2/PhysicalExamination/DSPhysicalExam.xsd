<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DSPhysicalExam" targetNamespace="http://tempuri.org/DSPhysicalExam.xsd" xmlns:mstns="http://tempuri.org/DSPhysicalExam.xsd" xmlns="http://tempuri.org/DSPhysicalExam.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="1" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="cms_databaseConnectionString1" IsAppSettingsProperty="true" Modifier="Assembly" Name="cms_databaseConnectionString1 (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Clinic_Management_System.My.MySettings.GlobalReference.Default.cms_databaseConnectionString1" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="cms_databaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="cms_databaseConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Clinic_Management_System.My.MySettings.GlobalReference.Default.cms_databaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblPhysicalCheckTableAdapter" GeneratorDataComponentClassName="tblPhysicalCheckTableAdapter" Name="tblPhysicalCheck" UserDataComponentName="tblPhysicalCheckTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="cms_database.dbo.tblPhysicalCheck" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblPhysicalCheck] WHERE (([physicalcheckid] = @Original_physicalcheckid) AND ([physicalcheck] = @Original_physicalcheck))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_physicalcheck" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="physicalcheck" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblPhysicalCheck] ([physicalcheck]) VALUES (@physicalcheck);
SELECT physicalcheckid, physicalcheck FROM tblPhysicalCheck WHERE (physicalcheckid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@physicalcheck" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="physicalcheck" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT physicalcheckid, physicalcheck FROM dbo.tblPhysicalCheck</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblPhysicalCheck] SET [physicalcheck] = @physicalcheck WHERE (([physicalcheckid] = @Original_physicalcheckid) AND ([physicalcheck] = @Original_physicalcheck));
SELECT physicalcheckid, physicalcheck FROM tblPhysicalCheck WHERE (physicalcheckid = @physicalcheckid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@physicalcheck" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="physicalcheck" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_physicalcheck" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="physicalcheck" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="physicalcheckid" ColumnName="physicalcheckid" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="physicalcheckid" DataSetColumn="physicalcheckid" />
              <Mapping SourceColumn="physicalcheck" DataSetColumn="physicalcheck" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="V_PHYSICAL_EXAMTableAdapter" GeneratorDataComponentClassName="V_PHYSICAL_EXAMTableAdapter" Name="V_PHYSICAL_EXAM" UserDataComponentName="V_PHYSICAL_EXAMTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="cms_database.dbo.V_PHYSICAL_EXAM" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     ppatientid, note, physicalcheckid, physicalcheck, physicalcheckdetailid
FROM         V_PHYSICAL_EXAM</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ppatientid" DataSetColumn="ppatientid" />
              <Mapping SourceColumn="note" DataSetColumn="note" />
              <Mapping SourceColumn="physicalcheckid" DataSetColumn="physicalcheckid" />
              <Mapping SourceColumn="physicalcheck" DataSetColumn="physicalcheck" />
              <Mapping SourceColumn="physicalcheckdetailid" DataSetColumn="physicalcheckdetailid" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="cms_database.dbo.V_PHYSICAL_EXAM" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillByPatientID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByPatientID" GeneratorSourceName="FillByPatientID" GetMethodModifier="Public" GetMethodName="GetDataByPatientID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByPatientID" UserSourceName="FillByPatientID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     ppatientid, note, physicalcheckid, physicalcheck, physicalcheckdetailid
FROM         V_PHYSICAL_EXAM
WHERE
ppatientid=@ppatientid</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ppatientid" ColumnName="ppatientid" DataSourceName="cms_database.dbo.V_PHYSICAL_EXAM" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ppatientid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ppatientid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblphysicalcheckdetailTableAdapter" GeneratorDataComponentClassName="tblphysicalcheckdetailTableAdapter" Name="tblphysicalcheckdetail" UserDataComponentName="tblphysicalcheckdetailTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="cms_database.dbo.tblphysicalcheckdetail" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblphysicalcheckdetail] WHERE (([physicalcheckdetailid] = @Original_physicalcheckdetailid) AND ([physicalcheckid] = @Original_physicalcheckid) AND ([prescriptionid] = @Original_prescriptionid) AND ([note] = @Original_note))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_physicalcheckdetailid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="physicalcheckdetailid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_note" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblphysicalcheckdetail] ([physicalcheckid], [prescriptionid], [note]) VALUES (@physicalcheckid, @prescriptionid, @note);
SELECT physicalcheckdetailid, physicalcheckid, prescriptionid, note FROM tblphysicalcheckdetail WHERE (physicalcheckdetailid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT physicalcheckdetailid, physicalcheckid, prescriptionid, note FROM dbo.tblphysicalcheckdetail</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblphysicalcheckdetail] SET [physicalcheckid] = @physicalcheckid, [prescriptionid] = @prescriptionid, [note] = @note WHERE (([physicalcheckdetailid] = @Original_physicalcheckdetailid) AND ([physicalcheckid] = @Original_physicalcheckid) AND ([prescriptionid] = @Original_prescriptionid) AND ([note] = @Original_note));
SELECT physicalcheckdetailid, physicalcheckid, prescriptionid, note FROM tblphysicalcheckdetail WHERE (physicalcheckdetailid = @physicalcheckdetailid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_physicalcheckdetailid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="physicalcheckdetailid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_note" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="physicalcheckdetailid" ColumnName="physicalcheckdetailid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@physicalcheckdetailid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="physicalcheckdetailid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="physicalcheckdetailid" DataSetColumn="physicalcheckdetailid" />
              <Mapping SourceColumn="physicalcheckid" DataSetColumn="physicalcheckid" />
              <Mapping SourceColumn="prescriptionid" DataSetColumn="prescriptionid" />
              <Mapping SourceColumn="note" DataSetColumn="note" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeletePhysical" Modifier="Public" Name="DeletePhysical" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeletePhysical">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblphysicalcheckdetail] WHERE ([physicalcheckdetailid] = @Original_physicalcheckdetailid) </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_physicalcheckdetailid" ColumnName="physicalcheckdetailid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Original_physicalcheckdetailid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="physicalcheckdetailid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeletePhysicalByPrescriptionID" Modifier="Public" Name="DeletePhysicalByPrescriptionID" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeletePhysicalByPrescriptionID">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblphysicalcheckdetail] WHERE ([prescriptionid] = @Original_prescriptionid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_prescriptionid" ColumnName="prescriptionid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Original_prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="cms_database.dbo.tblphysicalcheckdetail" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByPhysical" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="SelectPhysical" GeneratorSourceName="FillByPhysical" GetMethodModifier="Public" GetMethodName="SelectPhysical" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="SelectPhysical" UserSourceName="FillByPhysical">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT note, physicalcheckdetailid, physicalcheckid, prescriptionid FROM tblphysicalcheckdetail WHERE (physicalcheckdetailid = @physicalcheckdetailid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="physicalcheckdetailid" ColumnName="physicalcheckdetailid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@physicalcheckdetailid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="physicalcheckdetailid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByPrescriptionID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="SelectPhysicalByPrescriptionID" GeneratorSourceName="FillByPrescriptionID" GetMethodModifier="Public" GetMethodName="SelectPhysicalByPrescriptionID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="SelectPhysicalByPrescriptionID" UserSourceName="FillByPrescriptionID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT P.physicalcheckdetailid, P.physicalcheckid, C.physicalcheck, P.prescriptionid,P.note FROM dbo.tblphysicalcheckdetail AS P  INNER JOIN tblPhysicalCheck AS C ON C.physicalcheckid=P.physicalcheckid WHERE P.prescriptionid=@prescriptionid</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="prescriptionid" ColumnName="prescriptionid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertPhysical" Modifier="Public" Name="InsertPhysical" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="InsertPhysical">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblphysicalcheckdetail] ([physicalcheckid], [prescriptionid], [note]) VALUES (@physicalcheckid, @prescriptionid, @note);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="physicalcheckid" ColumnName="physicalcheckid" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="prescriptionid" ColumnName="prescriptionid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="note" ColumnName="note" DataSourceName="" DataTypeServer="varchar(500)" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="500" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdatePhysical" Modifier="Public" Name="UpdatePhysical" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="UpdatePhysical">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblphysicalcheckdetail] SET [physicalcheckid] = @physicalcheckid, [prescriptionid] = @prescriptionid, [note] = @note WHERE ([physicalcheckdetailid] = @Original_physicalcheckdetailid) </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="physicalcheckid" ColumnName="physicalcheckid" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="prescriptionid" ColumnName="prescriptionid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="note" ColumnName="note" DataSourceName="" DataTypeServer="varchar(500)" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="500" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_physicalcheckdetailid" ColumnName="physicalcheckdetailid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Original_physicalcheckdetailid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="physicalcheckdetailid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdatePhysicalByPrescriptionID" Modifier="Public" Name="UpdatePhysicalByPrescriptionID" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="UpdatePhysicalByPrescriptionID">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [dbo].[tblphysicalcheckdetail] SET [physicalcheckid] = @physicalcheckid, [prescriptionid] = @prescriptionid, [note] = @note WHERE ([prescriptionid] = @Original_prescriptionid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="physicalcheckid" ColumnName="physicalcheckid" DataSourceName="cms_database.dbo.tblphysicalcheckdetail" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="prescriptionid" ColumnName="prescriptionid" DataSourceName="cms_database.dbo.tblphysicalcheckdetail" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="note" ColumnName="note" DataSourceName="cms_database.dbo.tblphysicalcheckdetail" DataTypeServer="varchar(500)" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="500" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_prescriptionid" ColumnName="prescriptionid" DataSourceName="cms_database.dbo.tblphysicalcheckdetail" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Original_prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdatePhysicalNote" Modifier="Public" Name="UpdatePhysicalNote" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="UpdatePhysicalNote">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       tblphysicalcheckdetail
SET                note = @note
WHERE       (prescriptionid = @Original_prescriptionid) </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="note" ColumnName="note" DataSourceName="cms_database.dbo.tblphysicalcheckdetail" DataTypeServer="varchar(500)" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="500" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_prescriptionid" ColumnName="prescriptionid" DataSourceName="cms_database.dbo.tblphysicalcheckdetail" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Original_prescriptionid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="prescriptionid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblprephysicalcheckdetailTableAdapter" GeneratorDataComponentClassName="tblprephysicalcheckdetailTableAdapter" Name="tblprephysicalcheckdetail" UserDataComponentName="tblprephysicalcheckdetailTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="cms_database.dbo.tblprephysicalcheckdetail" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblprephysicalcheckdetail] WHERE (([preid] = @Original_preid) AND ((@IsNull_patientid = 1 AND [patientid] IS NULL) OR ([patientid] = @Original_patientid)) AND ((@IsNull_physicalcheckid = 1 AND [physicalcheckid] IS NULL) OR ([physicalcheckid] = @Original_physicalcheckid)) AND ((@IsNull_note = 1 AND [note] IS NULL) OR ([note] = @Original_note)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_preid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="preid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_patientid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_patientid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="patientid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_note" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblprephysicalcheckdetail] ([patientid], [physicalcheckid], [note]) VALUES (@patientid, @physicalcheckid, @note);
SELECT preid, patientid, physicalcheckid, note FROM tblprephysicalcheckdetail WHERE (preid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@patientid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="patientid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT preid, patientid, physicalcheckid, note FROM dbo.tblprephysicalcheckdetail</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblprephysicalcheckdetail] SET [patientid] = @patientid, [physicalcheckid] = @physicalcheckid, [note] = @note WHERE (([preid] = @Original_preid) AND ((@IsNull_patientid = 1 AND [patientid] IS NULL) OR ([patientid] = @Original_patientid)) AND ((@IsNull_physicalcheckid = 1 AND [physicalcheckid] IS NULL) OR ([physicalcheckid] = @Original_physicalcheckid)) AND ((@IsNull_note = 1 AND [note] IS NULL) OR ([note] = @Original_note)));
SELECT preid, patientid, physicalcheckid, note FROM tblprephysicalcheckdetail WHERE (preid = @preid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@patientid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="patientid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_preid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="preid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_patientid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="patientid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_patientid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="patientid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_note" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_note" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="preid" ColumnName="preid" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@preid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="preid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="preid" DataSetColumn="preid" />
              <Mapping SourceColumn="patientid" DataSetColumn="patientid" />
              <Mapping SourceColumn="physicalcheckid" DataSetColumn="physicalcheckid" />
              <Mapping SourceColumn="note" DataSetColumn="note" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteByPrePhysical" Modifier="Public" Name="DeleteByPrePhysical" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteByPrePhysical">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[tblprephysicalcheckdetail] WHERE (([preid] = @Original_preid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_preid" ColumnName="preid" DataSourceName="cms_database.dbo.tblprephysicalcheckdetail" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Original_preid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="preid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteExam" Modifier="Public" Name="DeleteExam" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteExam">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[tblprephysicalcheckdetail] WHERE ([patientid] = @Original_patientid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_patientid" ColumnName="patientid" DataSourceName="cms_database.dbo.tblprephysicalcheckdetail" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@Original_patientid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="patientid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByPPatientID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="SelectByPPatientID" GeneratorSourceName="FillByPPatientID" GetMethodModifier="Public" GetMethodName="SelectByPPatientID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="SelectByPPatientID" UserSourceName="FillByPPatientID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT pp.preid, pp.patientid, pp.physicalcheckid, pp.note,p.physicalcheck FROM dbo.tblprephysicalcheckdetail as pp,tblPhysicalCheck as P WHERE (p.physicalcheckid = pp.physicalcheckid) and  (pp.patientid=@patientid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="patientid" ColumnName="patientid" DataSourceName="cms_database.dbo.tblprephysicalcheckdetail" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@patientid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="patientid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertExam" Modifier="Public" Name="InsertExam" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="InsertExam">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[tblprephysicalcheckdetail] ([patientid], [physicalcheckid], [note]) VALUES (@patientid, @physicalcheckid, @note);</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="patientid" ColumnName="patientid" DataSourceName="cms_database.dbo.tblprephysicalcheckdetail" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@patientid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="patientid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="physicalcheckid" ColumnName="physicalcheckid" DataSourceName="cms_database.dbo.tblprephysicalcheckdetail" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="note" ColumnName="note" DataSourceName="cms_database.dbo.tblprephysicalcheckdetail" DataTypeServer="varchar(500)" DbType="AnsiString" Direction="Input" ParameterName="@note" Precision="0" ProviderType="VarChar" Scale="0" Size="500" SourceColumn="note" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="cms_databaseConnectionString (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ScalarPhysicalCheck" Modifier="Public" Name="ScalarPhysicalCheck" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="ScalarPhysicalCheck">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM tblprephysicalcheckdetail WHERE patientid=@patientID and physicalcheckid=@physicalcheckid</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="patientID" ColumnName="patientid" DataSourceName="cms_database.dbo.tblprephysicalcheckdetail" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@patientID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="patientid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="physicalcheckid" ColumnName="physicalcheckid" DataSourceName="cms_database.dbo.tblprephysicalcheckdetail" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@physicalcheckid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="physicalcheckid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DSPhysicalExam" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DSPhysicalExam" msprop:Generator_DataSetName="DSPhysicalExam" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="tblPhysicalCheck" msprop:Generator_UserTableName="tblPhysicalCheck" msprop:Generator_RowDeletedName="tblPhysicalCheckRowDeleted" msprop:Generator_RowChangedName="tblPhysicalCheckRowChanged" msprop:Generator_RowClassName="tblPhysicalCheckRow" msprop:Generator_RowChangingName="tblPhysicalCheckRowChanging" msprop:Generator_RowEvArgName="tblPhysicalCheckRowChangeEvent" msprop:Generator_RowEvHandlerName="tblPhysicalCheckRowChangeEventHandler" msprop:Generator_TableClassName="tblPhysicalCheckDataTable" msprop:Generator_TableVarName="tabletblPhysicalCheck" msprop:Generator_RowDeletingName="tblPhysicalCheckRowDeleting" msprop:Generator_TablePropName="tblPhysicalCheck">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="physicalcheckid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="physicalcheckid" msprop:Generator_ColumnVarNameInTable="columnphysicalcheckid" msprop:Generator_ColumnPropNameInRow="physicalcheckid" msprop:Generator_ColumnPropNameInTable="physicalcheckidColumn" type="xs:int" />
              <xs:element name="physicalcheck" msprop:Generator_UserColumnName="physicalcheck" msprop:Generator_ColumnVarNameInTable="columnphysicalcheck" msprop:Generator_ColumnPropNameInRow="physicalcheck" msprop:Generator_ColumnPropNameInTable="physicalcheckColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="500" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="V_PHYSICAL_EXAM" msprop:Generator_UserTableName="V_PHYSICAL_EXAM" msprop:Generator_RowDeletedName="V_PHYSICAL_EXAMRowDeleted" msprop:Generator_RowChangedName="V_PHYSICAL_EXAMRowChanged" msprop:Generator_RowClassName="V_PHYSICAL_EXAMRow" msprop:Generator_RowChangingName="V_PHYSICAL_EXAMRowChanging" msprop:Generator_RowEvArgName="V_PHYSICAL_EXAMRowChangeEvent" msprop:Generator_RowEvHandlerName="V_PHYSICAL_EXAMRowChangeEventHandler" msprop:Generator_TableClassName="V_PHYSICAL_EXAMDataTable" msprop:Generator_TableVarName="tableV_PHYSICAL_EXAM" msprop:Generator_RowDeletingName="V_PHYSICAL_EXAMRowDeleting" msprop:Generator_TablePropName="V_PHYSICAL_EXAM">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ppatientid" msprop:Generator_UserColumnName="ppatientid" msprop:Generator_ColumnPropNameInRow="ppatientid" msprop:Generator_ColumnVarNameInTable="columnppatientid" msprop:Generator_ColumnPropNameInTable="ppatientidColumn" type="xs:long" />
              <xs:element name="note" msprop:Generator_UserColumnName="note" msprop:Generator_ColumnPropNameInRow="note" msprop:Generator_ColumnVarNameInTable="columnnote" msprop:Generator_ColumnPropNameInTable="noteColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="500" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="physicalcheckid" msprop:Generator_UserColumnName="physicalcheckid" msprop:Generator_ColumnPropNameInRow="physicalcheckid" msprop:Generator_ColumnVarNameInTable="columnphysicalcheckid" msprop:Generator_ColumnPropNameInTable="physicalcheckidColumn" type="xs:int" />
              <xs:element name="physicalcheck" msprop:Generator_UserColumnName="physicalcheck" msprop:Generator_ColumnPropNameInRow="physicalcheck" msprop:Generator_ColumnVarNameInTable="columnphysicalcheck" msprop:Generator_ColumnPropNameInTable="physicalcheckColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="500" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="physicalcheckdetailid" msprop:Generator_UserColumnName="physicalcheckdetailid" msprop:Generator_ColumnPropNameInRow="physicalcheckdetailid" msprop:Generator_ColumnVarNameInTable="columnphysicalcheckdetailid" msprop:Generator_ColumnPropNameInTable="physicalcheckdetailidColumn" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblphysicalcheckdetail" msprop:Generator_UserTableName="tblphysicalcheckdetail" msprop:Generator_RowDeletedName="tblphysicalcheckdetailRowDeleted" msprop:Generator_RowChangedName="tblphysicalcheckdetailRowChanged" msprop:Generator_RowClassName="tblphysicalcheckdetailRow" msprop:Generator_RowChangingName="tblphysicalcheckdetailRowChanging" msprop:Generator_RowEvArgName="tblphysicalcheckdetailRowChangeEvent" msprop:Generator_RowEvHandlerName="tblphysicalcheckdetailRowChangeEventHandler" msprop:Generator_TableClassName="tblphysicalcheckdetailDataTable" msprop:Generator_TableVarName="tabletblphysicalcheckdetail" msprop:Generator_RowDeletingName="tblphysicalcheckdetailRowDeleting" msprop:Generator_TablePropName="tblphysicalcheckdetail">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="physicalcheckdetailid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="physicalcheckdetailid" msprop:Generator_ColumnVarNameInTable="columnphysicalcheckdetailid" msprop:Generator_ColumnPropNameInRow="physicalcheckdetailid" msprop:Generator_ColumnPropNameInTable="physicalcheckdetailidColumn" type="xs:long" />
              <xs:element name="physicalcheckid" msprop:Generator_UserColumnName="physicalcheckid" msprop:Generator_ColumnVarNameInTable="columnphysicalcheckid" msprop:Generator_ColumnPropNameInRow="physicalcheckid" msprop:Generator_ColumnPropNameInTable="physicalcheckidColumn" type="xs:int" />
              <xs:element name="prescriptionid" msprop:Generator_UserColumnName="prescriptionid" msprop:Generator_ColumnVarNameInTable="columnprescriptionid" msprop:Generator_ColumnPropNameInRow="prescriptionid" msprop:Generator_ColumnPropNameInTable="prescriptionidColumn" type="xs:long" />
              <xs:element name="note" msprop:Generator_UserColumnName="note" msprop:Generator_ColumnVarNameInTable="columnnote" msprop:Generator_ColumnPropNameInRow="note" msprop:Generator_ColumnPropNameInTable="noteColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="500" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblprephysicalcheckdetail" msprop:Generator_UserTableName="tblprephysicalcheckdetail" msprop:Generator_RowDeletedName="tblprephysicalcheckdetailRowDeleted" msprop:Generator_RowChangedName="tblprephysicalcheckdetailRowChanged" msprop:Generator_RowClassName="tblprephysicalcheckdetailRow" msprop:Generator_RowChangingName="tblprephysicalcheckdetailRowChanging" msprop:Generator_RowEvArgName="tblprephysicalcheckdetailRowChangeEvent" msprop:Generator_RowEvHandlerName="tblprephysicalcheckdetailRowChangeEventHandler" msprop:Generator_TableClassName="tblprephysicalcheckdetailDataTable" msprop:Generator_TableVarName="tabletblprephysicalcheckdetail" msprop:Generator_RowDeletingName="tblprephysicalcheckdetailRowDeleting" msprop:Generator_TablePropName="tblprephysicalcheckdetail">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="preid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="preid" msprop:Generator_ColumnVarNameInTable="columnpreid" msprop:Generator_ColumnPropNameInRow="preid" msprop:Generator_ColumnPropNameInTable="preidColumn" type="xs:long" />
              <xs:element name="patientid" msprop:Generator_UserColumnName="patientid" msprop:Generator_ColumnVarNameInTable="columnpatientid" msprop:Generator_ColumnPropNameInRow="patientid" msprop:Generator_ColumnPropNameInTable="patientidColumn" type="xs:long" minOccurs="0" />
              <xs:element name="physicalcheckid" msprop:Generator_UserColumnName="physicalcheckid" msprop:Generator_ColumnVarNameInTable="columnphysicalcheckid" msprop:Generator_ColumnPropNameInRow="physicalcheckid" msprop:Generator_ColumnPropNameInTable="physicalcheckidColumn" type="xs:int" minOccurs="0" />
              <xs:element name="note" msprop:Generator_UserColumnName="note" msprop:Generator_ColumnVarNameInTable="columnnote" msprop:Generator_ColumnPropNameInRow="note" msprop:Generator_ColumnPropNameInTable="noteColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="500" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblPhysicalCheck" />
      <xs:field xpath="mstns:physicalcheckid" />
    </xs:unique>
    <xs:unique name="tblphysicalcheckdetail_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblphysicalcheckdetail" />
      <xs:field xpath="mstns:physicalcheckdetailid" />
    </xs:unique>
    <xs:unique name="tblprephysicalcheckdetail_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblprephysicalcheckdetail" />
      <xs:field xpath="mstns:preid" />
    </xs:unique>
  </xs:element>
</xs:schema>